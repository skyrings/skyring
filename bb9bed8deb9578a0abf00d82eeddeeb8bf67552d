{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_18b79287",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2016-04-20T06:34:38Z",
      "side": 1,
      "message": "%s/guidlines/guidelines/g",
      "range": {
        "startLine": 9,
        "startChar": 38,
        "endLine": 9,
        "endChar": 47
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_1f453c6f",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1007305
      },
      "writtenOn": "2016-04-19T16:11:51Z",
      "side": 1,
      "message": "This may be a stupid question, but why do you name the systemd service as \u0027skyringd\u0027, while all the other components of the service (project name, executable name) are just \u0027skyring\u0027 (without the d in the end)? Wouldn\u0027t be better to name it just skyring.service? There is not rule in the Fedora packaging policy that you have to append \u0027d\u0027 to the name of the service.",
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_adc62d47",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 1007305
      },
      "writtenOn": "2016-04-19T12:49:42Z",
      "side": 1,
      "message": "Shouldn\u0027t we use the current upstream name of the service here? Something like \"Skyring Daemon\" or \"Skyring Server\".",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 49
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_9f070c1c",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 4,
      "author": {
        "id": 1007305
      },
      "writtenOn": "2016-04-19T16:11:51Z",
      "side": 1,
      "message": "It seems to me that this conflicts with the Fedora systemd packaging policy,\nwhich states:\n\n\u003e For most services, we do not want to use requirement dependencies in the\n\u003e [Unit] section, such as Requires\u003d or Wants\u003d. Instead exclusively use ordering\n\u003e dependencies: Before\u003d and After\u003d. This is used to implement loose coupling: if\n\u003e someone asks two services to start at the same time, systemd will properly\n\u003e order their startup but not make it strictly necessary to run one if the other\n\u003e is started.\n\u003e\n\u003e If you use a requirement dependency, use Wants\u003d rather than Requires\u003d, to make\n\u003e things a little bit more robust. If you use a requirement dependency in almost\n\u003e all cases you should also add an ordering dependency, as ordering and\n\u003e requirement dependencies are orthogonal in systemd. \n\nSo you may reconsider using `Wants\u003d` here, and even if you\nare sure that you need to use it, you would have to add the services into the\n`After\u003d` field as well.",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 4,
        "endChar": 40
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_8dc5a93d",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 8,
      "author": {
        "id": 1007305
      },
      "writtenOn": "2016-04-19T12:49:42Z",
      "side": 1,
      "message": "Using PIDFile in the service file like this is valid\nonly when the service process will create this file itself.\nIs this the case with skyring?\n\nThat said, I see no point in writing a pid file for non\nforking service process.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 8,
        "endChar": 29
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_020de336",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1007305
      },
      "writtenOn": "2016-04-19T16:11:51Z",
      "side": 1,
      "message": "This looks like you are writing the logs directly there avoiding syslog/journal. There is no quidance in the packaging policy on this, but it would be good to ask someone\nfrom rhel team what is the good/expected way of logging.",
      "range": {
        "startLine": 9,
        "startChar": 44,
        "endLine": 9,
        "endChar": 75
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f3facfbc",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1007305
      },
      "writtenOn": "2016-04-20T08:19:17Z",
      "side": 1,
      "message": "Additional comments:\n\nSystemd documentation[1] (man 7 daemon) suggest the following for a New-Style Daemons:\n\n\u003e Instead of using the syslog() call to log directly to the system syslog service, a new-style daemon may choose to simply log to standard error via fprintf(), which is then forwarded to syslog by the init system. If log levels are necessary, these can be encoded by prefixing individual log lines with strings like \"\u003c4\u003e\" (for log level 4 \"WARNING\" in the syslog priority scheme), following a similar style as the Linux kernel\u0027s printk() level system. For details, see sd-daemon(3) and systemd.exec(5).\n\n[1] https://www.freedesktop.org/software/systemd/man/daemon.html\n\nI don\u0027t say this is required, but I would like to know what was the reasoning not to do this and what is expected to be done in RHEL 7.",
      "range": {
        "startLine": 9,
        "startChar": 44,
        "endLine": 9,
        "endChar": 75
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_b30447c0",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1007305
      },
      "writtenOn": "2016-04-20T08:19:17Z",
      "side": 1,
      "message": "Related BZ: https://bugzilla.redhat.com/show_bug.cgi?id\u003d1325340",
      "range": {
        "startLine": 9,
        "startChar": 44,
        "endLine": 9,
        "endChar": 76
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f3f9af81",
        "filename": "misc/systemd/skyringd.service",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2016-04-20T09:42:37Z",
      "side": 1,
      "message": "Martin, I hope you know that we are using go as the platform for development. Since we use go, we are  using the tools provided by the go eco-system  and hence we are using go-logging as the logging library and at this point we are not planing change the framework.",
      "parentUuid": "baa041b7_f3facfbc",
      "range": {
        "startLine": 9,
        "startChar": 44,
        "endLine": 9,
        "endChar": 75
      },
      "revId": "bb9bed8deb9578a0abf00d82eeddeeb8bf67552d",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}