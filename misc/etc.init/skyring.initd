#!/bin/sh
#
# skyring   Startup script for the skyring server
#
# chkconfig:   - 95 95
# description: skyring service

### BEGIN INIT INFO
# Provides: skyring
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Should-Start:
# Should-Stop:
# Default-Stop: 0 1 6
# Short-Description: start and stop skyring server
# Description: skyring server
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

exec="/usr/bin/skyring"
prog="skyring"
config="/etc/skyring/skyring.conf"
pidfile="/var/run/$prog.pid"
lockfile="/var/lock/subsys/skyringd"
logfile="/var/log/$prog/$prog.log"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

start() {

    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6

    if [ ! -f $logfile ] ; then
        touch $logfile
    fi

    if ! [ -f $pidfile ]; then
        touch $pidfile
        echo -n "Starting $prog: "
        $exec &>> $logfile & echo $! > $pidfile
        retval=$?
        if [ $retval -eq 0 ] ; then
            touch $lockfile
            echo
        fi
        return $retval
    else
        failure
        echo
        printf "$pidfile still exists...\n"
        exit 7
    fi

}

stop() {
    echo -n $"Stopping $prog: "
    # stop it here, often "killproc $prog"
    killproc -p $pidfile $prog
    rm -rf $pidfile
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

reload() {
    stop
    start
}

restart() {
    stop
    start
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    reload)
        $1
        ;;
    restart)
        $1
        ;;
    status)
        rh_status
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|reload|restart}"
        exit 2
esac
exit $?
