{
  "comments": [
    {
      "key": {
        "uuid": "fab399f4_819f1903",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "Did we decide on the way to go for actions like shrink,expand?",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_793ac737",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2015-10-07T09:43:02Z",
      "side": 1,
      "message": "this should be another json array. It should have cluster_ip_address and public_ip_address of the hosts.",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_61ccc536",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2015-10-07T05:35:23Z",
      "side": 1,
      "message": "It should be either \n\n DELETE \"/api/\u003cver\u003e/clusters/{cluster-id}\"\n\nor\n\n POST \"/api/\u003cver\u003e/clusters/{cluster-id}/forget\"",
      "range": {
        "startLine": 35,
        "startChar": 6,
        "endLine": 35,
        "endChar": 54
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_419501e3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T05:49:08Z",
      "side": 1,
      "message": "My mistake, forgot to remove /forget from URL. Will do that",
      "parentUuid": "fab399f4_61ccc536",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_012f89a2",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "Checking for failure case? Why to set cluster/node status to UP/USED in failure case?",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 21
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_790e4736",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "I think slip. In success case this whole piece of code is to be called.",
      "parentUuid": "fab399f4_012f89a2",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_e40f032d",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "I think these updates to be done in provider. These ops are going to be async and you will not get a chance to update the cluster and node status",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 80,
        "endChar": 4
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_b90fff2d",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "Once task management used based on success of the tasks, this DB update should happen but in core only I feel.",
      "parentUuid": "fab399f4_e40f032d",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_041dd766",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "Same as above",
      "range": {
        "startLine": 92,
        "startChar": 1,
        "endLine": 102,
        "endChar": 8
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_241adb6e",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "Same as above",
      "range": {
        "startLine": 115,
        "startChar": 1,
        "endLine": 126,
        "endChar": 4
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_21900dec",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "provider.Name is better",
      "range": {
        "startLine": 157,
        "startChar": 43,
        "endLine": 157,
        "endChar": 57
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_f919777a",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "done",
      "parentUuid": "fab399f4_21900dec",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_4426efbb",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "provider.Name is better",
      "range": {
        "startLine": 205,
        "startChar": 51,
        "endLine": 205,
        "endChar": 56
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_19262bbb",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fab399f4_4426efbb",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_a45c2b27",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "What is plan ? Are we removing only the cluster or we will remove the nodes as well? if not what will be status of nodes? I think we need to remove the nodes as well from DB.",
      "range": {
        "startLine": 225,
        "startChar": 1,
        "endLine": 225,
        "endChar": 38
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_99395bdb",
        "filename": "apps/skyring/cluster.go",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "Nodes should not be deleted as we are just forgetting the cluster from skyring but it still remains in backend.\nAll we are doing here is setting the clusterid field to blank for the node and deleting the cluster. We cannot mark the node as free as its actually participating in cluster but cluster not known to skyring.\n\nYes all the volumes and pools (at later stage once available) would be deleted as part of this.",
      "parentUuid": "fab399f4_a45c2b27",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_a1edfd8d",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2015-10-07T05:35:23Z",
      "side": 1,
      "message": "This serves two different purposes\n\n1. When the user calls a core API\n\n2. When the user calls a storage specific API\n\nIn case 1, the core knows about the type of the cluster. The lookup is very simple.\n\nIn case 2, the core doesn\u0027t know anything. The provider is selected base on the URL.\n\nI feel, these two cases should be handled differently. \n\nAlso the below code assumes, either \u0027cluster_type\u0027 or \u0027cluster_id\u0027 is part of request body which is not always true.",
      "range": {
        "startLine": 34,
        "startChar": 13,
        "endLine": 34,
        "endChar": 25
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_619a0516",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T05:49:08Z",
      "side": 1,
      "message": "By handled differently you mean to have different methods?\n\nI feel, in a request which is not provider specific, at least cluster_id would for sure be there. In what scenario you see cluster_id not present there?",
      "parentUuid": "fab399f4_a1edfd8d",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_41bc216d",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2015-10-07T05:58:52Z",
      "side": 1,
      "message": "yes, different functions.\n\n\u0027cluster_id\u0027 will not be part of the request body but in URL mostly.\n\nThe important thing here is, you always try to match with storage specific apis which is not required for core APIs.",
      "parentUuid": "fab399f4_619a0516",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_01aa2919",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T06:09:04Z",
      "side": 1,
      "message": "ok. will do that",
      "parentUuid": "fab399f4_41bc216d",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_81d1d9cf",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "It always return from here and other condition will never be checked. We need to check whether the map has that provider and only that case we need to return otherwise continue",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 8
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_b9361fe6",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fab399f4_81d1d9cf",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_c1daf1e8",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "I think we need to have the same check here too",
      "range": {
        "startLine": 76,
        "startChar": 3,
        "endLine": 76,
        "endChar": 8
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_d933d3f4",
        "filename": "apps/skyring/request-router.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fab399f4_c1daf1e8",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_a1d6ddc3",
        "filename": "apps/skyring/routes.go",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1006048
      },
      "writtenOn": "2015-10-07T05:35:23Z",
      "side": 1,
      "message": "Is this different from CORE_ROUTES?",
      "range": {
        "startLine": 28,
        "startChar": 5,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_c18831c9",
        "filename": "apps/skyring/routes.go",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T05:49:08Z",
      "side": 1,
      "message": "These routes are bit different from core routes as they end up calls in external providers, whereas pure core apis are within skyring.\n\nThe handler functions are defined attached to App because from app we need to get access to the providers map. From the provider map we get specific provider and invoke the rpc call. See the POST_Clusters() method in clusters.go",
      "parentUuid": "fab399f4_a1d6ddc3",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_a15fbd71",
        "filename": "apps/skyring/routes.go",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "I think we need to put all the routes into this function.Just define the global variables(CORE_ROUTES and CORE_ROUTES_NOAUTH) outside and the route definitions inside so that it is uniform across all routes. Otherwise it may cause confusion\nIs there any issue with that?",
      "range": {
        "startLine": 28,
        "startChar": 9,
        "endLine": 28,
        "endChar": 13
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_795c8726",
        "filename": "apps/skyring/routes.go",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "I feel definition of CORE_ROUTES we should move before this func() and its clear that local array of routes we are appending to the CORE_ROUTES.",
      "parentUuid": "fab399f4_a15fbd71",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_012069f6",
        "filename": "models/core_models.go",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "We need to separate out models definitions and others. Let model definitions only in this file and take out others like  AddStorageNodeRequest, type StorageNodes []StorageNode etc into a different file",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_b93d3fbe",
        "filename": "models/core_models.go",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "Then why not specific sources like nodes.go etc??",
      "parentUuid": "fab399f4_012069f6",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_e1229500",
        "filename": "models/core_models.go",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "Are these model definition in-line with what is defined in the provider spec? If not we need to make it in-line either updating provider spec or model defintion, whichever is appropriate.\nApplicable for all models definitions",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 114,
        "endChar": 16
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_19746b9b",
        "filename": "models/core_models.go",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "I referred the spec and created this model.",
      "parentUuid": "fab399f4_e1229500",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fab399f4_417981fb",
        "filename": "models/rpc.go",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1006044
      },
      "writtenOn": "2015-10-07T07:16:27Z",
      "side": 1,
      "message": "be in-line with what is defined in spec, including the var names. Also we need to define the RPC response here",
      "range": {
        "startLine": 16,
        "startChar": 1,
        "endLine": 16,
        "endChar": 5
      },
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dab895d6_79aac7d5",
        "filename": "models/rpc.go",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1006049
      },
      "writtenOn": "2015-10-07T07:53:42Z",
      "side": 1,
      "message": "Response is just a byte array which is a json I feel. Referred from ProviderHandler() method",
      "parentUuid": "fab399f4_417981fb",
      "revId": "6358fcc071de0a1d42bdee0f13492cf401fa8248",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}